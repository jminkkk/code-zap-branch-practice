name: PR Slack Notification
on:
  pull_request:
    types: [opened]
jobs:
  slack-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get reviewers
        id: get-reviewers
        run: |
          MAPPING=$(cat .github/slack-users.json)
          PR_REVIEWERS=$(gh pr view ${{ github.event.pull_request.number }} --json reviewRequests -q '.reviewRequests[].login')
          SLACK_MENTIONS=""
          GITHUB_MENTIONS=""
          for reviewer in $PR_REVIEWERS; do
            SLACK_ID=$(echo $MAPPING | jq -r ".[\"$reviewer\"]")
            if [ "$SLACK_ID" != "null" ]; then
              SLACK_MENTIONS="$SLACK_MENTIONS<@$SLACK_ID>,"
            fi
            GITHUB_MENTIONS="$GITHUB_MENTIONS@$reviewer "
          done
          SLACK_MENTIONS=${SLACK_MENTIONS%,}
          echo "reviewers=$SLACK_MENTIONS" >> $GITHUB_OUTPUT
          echo "github_reviewers=$GITHUB_MENTIONS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üî• ${{ github.event.pull_request.title }}Ïóê ÎåÄÌïú <${{ github.event.pull_request.html_url }}| pull request>Í∞Ä ÏÉùÏÑ± ÎêòÏóàÏäµÎãàÎã§. üî•"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ steps.get-reviewers.outputs.github_reviewers }}Ïùò Î¶¨Î∑∞Î•º Í∏∞Îã§Î¶¨Í≥† ÏûàÏñ¥Ïöî!"
                  }
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_CREATE_WEBHOOK_URL }}
