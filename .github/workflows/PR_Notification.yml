name: PR Slack Notification

on:
  pull_request:
    types: [opened, reopened]

jobs:
  notify_reviewers:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: PR 정보 가져오기
      id: pr_details
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const pr = await github.rest.pulls.get({
            pull_number: context.issue.number
          });
          return {
            reviewers: pr.data.requested_reviewers.map(r => r.login),
            title: pr.data.title,
            html_url: pr.data.html_url
          }

    - name: Slack 알람 보내기
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_CREATE_WEBHOOK_URL }}
        TEAM_MAPPING: ${{ secrets.SLACK_IDS }}
      run: |
        reviewers="${{ steps.pr_details.outputs.reviewers }}"
        pr_title="${{ steps.pr_details.outputs.title }}"
        pr_url="${{ steps.pr_details.outputs.html_url }}"
        
        team_mapping=$(echo $TEAM_MAPPING | jq -r '.')
        echo reviewers
        
        mentions=""
        for reviewer in $reviewers; do
          slack_id=$(echo $team_mapping | jq -r --arg gh "$reviewer" '.[$gh]')
          if [ "$slack_id" != "null" ]; then
            mentions="$mentions <@$slack_id>"
          fi
        done
        echo mentions

        if [ ! -z "$mentions" ]; then
          message="$mentions 님, 새로운 PR이 생성되었습니다: <$pr_url|$pr_title>"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$message\"}" \
            $SLACK_WEBHOOK_URL
        fi
