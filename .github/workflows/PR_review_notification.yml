name: PR Slack Notification
on:
  pull_request:
    types: [review_requested]

jobs:
  notify_reviewers:
    runs-on: ubuntu-latest
    steps:
    - name: 변수 추출
      run: |
        SLACK_WEBHOOK_URL=${{ secrets.SLACK_PR_CREATE_WEBHOOK_URL }}
        SLACK_IDS=${{ secrets.SLACK_IDS }}
        echo "SLACK_WEBHOOK_URL=$SLACK_WEBHOOK_URL" >> $GITHUB_ENV
        echo "SLACK_IDS=$SLACK_IDS" >> $GITHUB_ENV
        
    - name: PR 생성 시 reviewer에게 Slack 알람 보내기
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        PR_URL="${{ github.event.pull_request.html_url }}"
        REQUESTED_REVIEWER='${{ github.event.pull_request.requested_reviewer.login }}'
        echo "REQUESTED_REVIEWER: $REQUESTED_REVIEWER"
        
        parse_slack_ids() {
            echo "$SLACK_IDS" | jq -r 'to_entries | map("\(.key):\(.value)") | .[]'
        }
        
        slack_id=$(parse_slack_ids | grep "^$REQUESTED_REVIEWER:" | cut -d':' -f2)
        
        if [ -n "$slack_id" ]; then
            mention="<@$slack_id>"
        else
            mention="$REQUESTED_REVIEWER"
        fi
        
        echo "Mention: $mention"
        
        if [ ! -z "$mention" ]; then
          message="$mention 님, 새로운 PR이 생성되었습니다: <$PR_URL|$PR_TITLE>"
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$message\"}" \
            "$SLACK_WEBHOOK_URL"
          echo "Sent message: $message"
        fi
